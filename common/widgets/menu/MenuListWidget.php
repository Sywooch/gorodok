<?php
/**
 * Created by DENOLL LLC http://denoll.ru.
 * User: Denis Oleynikov
 * Email: denoll@denoll.ru
 * Date: 13.08.2016
 * Time: 15:54
 */

namespace common\widgets\menu;

use common\models\Menu;
use common\models\MenuList;
use \yii\bootstrap\Html;
use yii\bootstrap\Widget;
use yii\helpers\Url;

/**
 * Class MenuList
 * @package common\widgets\menu
 *
 * @property string $key
 * @property string $icon
 * @property array $data
 * @property array $tree
 */
class MenuListWidget extends Widget
{
	public $key = null;
	public $icon = null;
	public $ulOptions = [];
	public $liOptions = [];
	public $aOptions = [];
	public $innerUlOptions = [];
	protected $data = [];
	protected $tree = [];
	protected $str = [];

	public function init()
	{
		if (empty($this->key)) return null;
		$this->data = \Yii::$app->cache->get($this->key);
		if(!$this->data){
			$menu = MenuList::find()->where(['position'=>$this->key])->asArray()->one();
			$model = Menu::find()->where(['id_menu'=>$menu['id']])->asArray()->orderBy('order')->all();
			if (!$model) return null;
			foreach($model as $item){
				$this->data[$item['id']] = $item;
			}
			\Yii::$app->cache->set($this->key,$this->data, 3600);
		}
		$this->tree = $this->buildTree($this->data);
		parent::init();
	}

	public function run()
	{
		parent::run(); // TODO: Change the autogenerated stub
		echo Html::beginTag('ul', $this->ulOptions);
		echo $this->view_menu($this->tree);
		echo Html::endTag('ul');
	}

	function view_menu($menu)
	{
		if(empty($menu)) return null;
		foreach ($menu as $item) {
			echo Html::beginTag('li', $this->liOptions);
			if (!empty($item['icon'])) echo $item['icon'];
			if (stristr($item['path'], 'http://') || stristr($item['path'], 'https://')){
				echo Html::a($item['title'], $item['path'], $this->aOptions);
			}else{
				echo Html::a($item['title'], [$item['path']], $this->aOptions);
			}
			if(!empty($this->icon)) echo $this->icon;
			if ($item['children']) {
				echo Html::beginTag('ul', $this->innerUlOptions);
				$this->view_menu($item['children']);
				echo Html::endTag('ul');
			}
			echo Html::endTag('li');
		}
	}

	public function buildTree($data)
	{
		$tree = [ ];
		if ( empty($data) ) return null;
		foreach ( $data as $id => &$node ) {
			if ( !$node[ 'parent' ] ) {
				$tree[ $id ] = &$node;
			} else {
				$data[ $node[ 'parent' ] ][ 'children' ][ $id ] = &$node;
			}
		}
		return $tree;
	}
}
